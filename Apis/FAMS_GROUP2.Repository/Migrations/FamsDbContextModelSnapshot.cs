// <auto-generated />
using System;
using FAMS_GROUP2.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAMS_GROUP2.Repositories.Migrations
{
    [DbContext(typeof(FamsDbContext))]
    partial class FamsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UnsignAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UnsignFullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("Account_pk");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignmentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AssignmentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("Assignment_pk");

                    b.HasIndex("ModuleId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.AttendanceClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StudentClassId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("AttendanceClass_pk");

                    b.HasIndex("StudentClassId");

                    b.ToTable("AttendanceClass", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CertificateType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("Certificate_pk");

                    b.ToTable("Certificate", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("Class_pk");

                    b.HasIndex("ProgramId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.ClassAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ClassAccount_pk");

                    b.HasIndex("AdminId");

                    b.HasIndex("ClassId");

                    b.HasIndex("TrainerId");

                    b.ToTable("ClassAccount", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("Document_pk");

                    b.HasIndex("LessonId");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailSend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EmailSend_pk");

                    b.HasIndex("SenderId");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmailSend", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailSendStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmailSendId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiveId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EmailSendStudent_pk");

                    b.HasIndex("EmailSendId");

                    b.HasIndex("ReceiveId");

                    b.ToTable("EmailSendStudent", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("EmailTemplate_pk");

                    b.ToTable("EmailTemplate", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LessonCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LessonName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("Lesson_pk");

                    b.HasIndex("ModuleId");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("Module_pk");

                    b.ToTable("Module", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.ProgramModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ProgramModule_pk");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramModule", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("Role_pk");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Asm1")
                        .HasColumnType("float");

                    b.Property<double?>("Asm2")
                        .HasColumnType("float");

                    b.Property<double?>("Asm3")
                        .HasColumnType("float");

                    b.Property<double?>("Asm4")
                        .HasColumnType("float");

                    b.Property<double?>("Asm5")
                        .HasColumnType("float");

                    b.Property<double?>("AsmAvg")
                        .HasColumnType("float")
                        .HasComment("Avarage of Assignment");

                    b.Property<double?>("Audit")
                        .HasColumnType("float");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Gpamodule")
                        .HasColumnType("float")
                        .HasColumnName("GPAModule");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelModule")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("PracticeFinal")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz1")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz2")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz3")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz4")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz5")
                        .HasColumnType("float");

                    b.Property<double?>("Quiz6")
                        .HasColumnType("float");

                    b.Property<double?>("QuizAvg")
                        .HasColumnType("float")
                        .HasComment("Average off Q1 - Q6");

                    b.Property<double?>("QuizFinal")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Score_pk");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("Score", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnrollmentArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<double?>("Gpa")
                        .HasColumnType("float")
                        .HasColumnName("GPA");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Major")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Recruiter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RECruiter");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Skill")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StudentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("University")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnsignFullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("YearOfGraduation")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id")
                        .HasName("Student_pk");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.StudentCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CertificateId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProvidedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentCertificate_pk");

                    b.HasIndex("CertificateId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCertificate", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentClass_pk");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClass", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Duration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProgramCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProgramName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("TrainingProgram_pk");

                    b.ToTable("TrainingProgram", (string)null);
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Account", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Role", "Role")
                        .WithMany("Account")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("Account_Role_fk");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Assignment", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Module", "Module")
                        .WithMany("Assignments")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("Assignment_Module_ModuleId_fk");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.AttendanceClass", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.StudentClass", "StudentClass")
                        .WithMany("AttendanceClasses")
                        .HasForeignKey("StudentClassId")
                        .HasConstraintName("AttendanceClass_StudentClass_StudentClassId_fk");

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Class", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.TrainingProgram", "Program")
                        .WithMany("Classes")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("Class_TrainingProgram_ProgramId_fk");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.ClassAccount", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Account", "Admin")
                        .WithMany("ClassAccountAdmins")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("ClassAccount_Account_AccountId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Class", "Class")
                        .WithMany("ClassAccounts")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("ClassAccount_Class_ClassId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Account", "Trainer")
                        .WithMany("ClassAccountTrainers")
                        .HasForeignKey("TrainerId")
                        .HasConstraintName("ClassAccount_Account_AccountId_fk_2");

                    b.Navigation("Admin");

                    b.Navigation("Class");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Document", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Lesson", "Lesson")
                        .WithMany("Documents")
                        .HasForeignKey("LessonId")
                        .IsRequired()
                        .HasConstraintName("Document_Lesson_LessonId_fk");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailSend", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Account", "Sender")
                        .WithMany("EmailSends")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("EmailSend_Account_AccountId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.EmailTemplate", "Template")
                        .WithMany("EmailSends")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("EmailSend_EmailTemplate_TemplateId_fk");

                    b.Navigation("Sender");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailSendStudent", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.EmailSend", "EmailSend")
                        .WithMany("EmailSendStudents")
                        .HasForeignKey("EmailSendId")
                        .HasConstraintName("EmailSendStudent_EmailSend_EmailSendId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Student", "Receive")
                        .WithMany("EmailSendStudents")
                        .HasForeignKey("ReceiveId")
                        .HasConstraintName("EmailSendStudent_Student_StudentId_fk");

                    b.Navigation("EmailSend");

                    b.Navigation("Receive");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Lesson", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Module", "Module")
                        .WithMany("Lessons")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("Lesson_Module_ModuleId_fk");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.ProgramModule", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Module", "Module")
                        .WithMany("ProgramModules")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("ProgramModule_Module_ModuleId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.TrainingProgram", "Program")
                        .WithMany("ProgramModules")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("ProgramModule_TrainingProgram_ProgramId_fk");

                    b.Navigation("Module");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Score", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Class", "Class")
                        .WithMany("Scores")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("Score_Class_ClassId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("Score_Student_StudentId_fk");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.StudentCertificate", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Certificate", "Certificate")
                        .WithMany("StudentCertificates")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("StudentCertificate_Certificate_CertificateId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Student", "Student")
                        .WithMany("StudentCertificates")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("StudentCertificate_Student_StudentId_fk");

                    b.Navigation("Certificate");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.StudentClass", b =>
                {
                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("StudentClass_Class_ClassId_fk");

                    b.HasOne("FAMS_GROUP2.Repositories.Entities.Student", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("StudentClass_Student_StudentId_fk");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Account", b =>
                {
                    b.Navigation("ClassAccountAdmins");

                    b.Navigation("ClassAccountTrainers");

                    b.Navigation("EmailSends");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Certificate", b =>
                {
                    b.Navigation("StudentCertificates");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Class", b =>
                {
                    b.Navigation("ClassAccounts");

                    b.Navigation("Scores");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailSend", b =>
                {
                    b.Navigation("EmailSendStudents");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.EmailTemplate", b =>
                {
                    b.Navigation("EmailSends");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Lesson", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Module", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Lessons");

                    b.Navigation("ProgramModules");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Role", b =>
                {
                    b.Navigation("Account");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.Student", b =>
                {
                    b.Navigation("EmailSendStudents");

                    b.Navigation("Scores");

                    b.Navigation("StudentCertificates");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.StudentClass", b =>
                {
                    b.Navigation("AttendanceClasses");
                });

            modelBuilder.Entity("FAMS_GROUP2.Repositories.Entities.TrainingProgram", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("ProgramModules");
                });
#pragma warning restore 612, 618
        }
    }
}
